{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tanmaykulkarni/WebstormProjects/rick-morty-challenge/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react'; // Import useState & useEffect hooks\n\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nconst defaultEndpoint = 'https://rickandmortyapi.com/api/character/'; // Default API endpoint\n\nexport async function getServerSideProps() {\n  // Function to fetch all the characters data\n  const res = await fetch(defaultEndpoint); // Setting the default API endpoint in the reponse\n\n  const data = await res.json(); // Grab the data in JSON format\n\n  return {\n    props: {\n      // Make data available in Props property.\n      data\n    }\n  };\n}\nexport default function Home({\n  data\n}) {\n  // Create an argument 'home' and capture the data\n  const {\n    info,\n    results: defaultResults = []\n  } = data; // Destructure the results and send empty array value and destructure the same from data\n\n  const {\n    0: results,\n    1: updateResults\n  } = useState(defaultResults); // Using React's useState we can store the results in state and the update the state with more results. Rename results to defaultResults to be used as the initial state.\n\n  const {\n    0: page,\n    1: updatePage\n  } = useState(_objectSpread(_objectSpread({}, info), {}, {\n    current: defaultEndpoint // Define the defaultEndpoint as the current state of the page.\n\n  }));\n  const {\n    current\n  } = page; // Use the current value to be updated every page by destructuring the 'current' vale from the page\n\n  useEffect(() => {\n    // Use useEffct to make request of pagination updates\n    if (current === defaultEndpoint) return; // check if the current value equals the default end point value\n\n    async function request() {\n      var _nextData$info;\n\n      // Call the async function to request a response to update the current state of the page\n      const res = await fetch(current);\n      const nextData = await res.json(); // assign nextData the value of the response in JSON format\n\n      updatePage(_objectSpread({\n        // Pass the current, next data information attributes in the updatePage function\n        current\n      }, nextData.info));\n\n      if (!((_nextData$info = nextData.info) !== null && _nextData$info !== void 0 && _nextData$info.prev)) {\n        // check if the information does not have previous value therefore replace the current results\n        updateResults(nextData.results);\n        return;\n      }\n\n      updateResults(prev => {\n        // Update the result and return the previous and new results\n        return [...prev, ...nextData.results];\n      });\n    }\n\n    request(); // Call a request function and pass 'current's' value through it\n  }, [current]);\n\n  function handleLoadMore() {\n    // Load more button function\n    updatePage(prev => {\n      // Update the 'page' state with new current value with the 'next' value as the as the endpoint to fetch new results\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        current: page === null || page === void 0 ? void 0 : page.next\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Rick & Morty Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"../tkfavicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Rick & Morty Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: [\" \", \"by Tanmay Kulkarni\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.grid,\n        children: [\" \", results.map(results => {\n          // By using map method create a new list of each character result\n          const {\n            id,\n            name,\n            image,\n            gender,\n            location,\n            origin,\n            species\n          } = results; // map the results by id, name, image, gender, location, origin & species\n\n          return (\n            /*#__PURE__*/\n            // Return a list by id as the key\n            _jsxDEV(\"li\", {\n              className: styles.card,\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image,\n                  alt: '${name}} Thumbnail'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: styles.ulimage,\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Gender: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this), \" \", gender, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Location: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this), \" \", location === null || location === void 0 ? void 0 : location.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Origin: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this), \" \", origin === null || origin === void 0 ? void 0 : origin.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Species: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this), \" \", species, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          );\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.bouncy,\n          onClick: handleLoadMore,\n          children: \"Load More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [\"Powered by\", ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/vercel.svg\",\n          alt: \"Vercel Logo\",\n          className: styles.logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/tanmaykulkarni/WebstormProjects/rick-morty-challenge/pages/index.js"],"names":["useState","useEffect","Head","styles","defaultEndpoint","getServerSideProps","res","fetch","data","json","props","Home","info","results","defaultResults","updateResults","page","updatePage","current","request","nextData","prev","handleLoadMore","next","container","main","title","description","grid","map","id","name","image","gender","location","origin","species","card","ulimage","bouncy","footer","logo"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react' // Import useState & useEffect hooks\nimport Head from 'next/head'\nimport styles from '../styles/Home.module.css'\n\n\nconst defaultEndpoint = 'https://rickandmortyapi.com/api/character/'; // Default API endpoint\n\nexport async function getServerSideProps() {  // Function to fetch all the characters data\n    const res = await fetch(defaultEndpoint) // Setting the default API endpoint in the reponse\n    const data = await res.json(); // Grab the data in JSON format\n    return {\n        props: { // Make data available in Props property.\n            data\n        }\n    }\n}\n\nexport default function Home({data}) { // Create an argument 'home' and capture the data\n    const {info, results: defaultResults = []} = data; // Destructure the results and send empty array value and destructure the same from data\n    const [results, updateResults] = useState(defaultResults); // Using React's useState we can store the results in state and the update the state with more results. Rename results to defaultResults to be used as the initial state.\n    const [page, updatePage] = useState({ //\n        ...info,\n        current: defaultEndpoint // Define the defaultEndpoint as the current state of the page.\n    });\n\n    const {current} = page; // Use the current value to be updated every page by destructuring the 'current' vale from the page\n\n    useEffect(() => { // Use useEffct to make request of pagination updates\n        if (current === defaultEndpoint) return; // check if the current value equals the default end point value\n\n        async function request() { // Call the async function to request a response to update the current state of the page\n            const res = await fetch(current)\n            const nextData = await res.json(); // assign nextData the value of the response in JSON format\n\n            updatePage({ // Pass the current, next data information attributes in the updatePage function\n                current, ...nextData.info\n            });\n\n            if (!nextData.info?.prev) { // check if the information does not have previous value therefore replace the current results\n                updateResults(nextData.results);\n                return;\n            }\n\n            updateResults(prev => { // Update the result and return the previous and new results\n                return [\n                    ...prev,\n                    ...nextData.results\n                ]\n            });\n        }\n\n        request(); // Call a request function and pass 'current's' value through it\n    }, [current]);\n\n    function handleLoadMore() { // Load more button function\n        updatePage(prev => { // Update the 'page' state with new current value with the 'next' value as the as the endpoint to fetch new results\n            return {\n                ...prev,\n                current: page?.next\n            }\n        });\n    }\n\n    return (\n        <div className={styles.container}>\n            <Head>\n                <title>Rick & Morty Challenge</title> {/* Page Title & Favicon */}\n                <link rel=\"icon\" href=\"../tkfavicon.ico\"/>\n            </Head>\n\n            <main className={styles.main}> {/* Page Title */}\n                <h1 className={styles.title}>\n                    Rick & Morty Challenge\n                </h1>\n\n                <p className={styles.description}> {/* Page sub-title */}\n                    by Tanmay Kulkarni\n                </p>\n\n                <ul className={styles.grid}> {/* Grid layout */}\n                    {results.map(results => { // By using map method create a new list of each character result\n                        const {id, name, image, gender, location, origin, species} = results; // map the results by id, name, image, gender, location, origin & species\n                        return ( // Return a list by id as the key\n                            <li key={id} className={styles.card}>\n                                <a href=\"#\">\n                                    <img src={image} alt={'${name}} Thumbnail'}/> {/* Display the image of the character and update the header with name  */}\n                                    <h3>{name}</h3>\n                                </a>\n                                <ul className={styles.ulimage}> {/* Custom bullet */}\n                                    <li>\n                                        <strong>Gender: </strong> {gender} {/* Display gender */}\n                                    </li>\n                                    <li>\n                                        <strong>Location: </strong> {location?.name} {/* Display location */}\n                                    </li>\n                                    <li>\n                                        <strong>Origin: </strong> {origin?.name} {/* Display origin */}\n                                    </li>\n                                    <li>\n                                        <strong>Species: </strong> {species} {/* Display species */}\n                                    </li>\n                                </ul>\n                            </li>\n                        )\n                    })}\n                </ul>\n\n                <p>\n                    <button className={styles.bouncy} onClick={handleLoadMore}>Load More</button> {/* Button designed inspired from https://fdossena.com/?p=html5cool/buttons/i.frag */}\n                </p>\n\n            </main>\n\n            <footer className={styles.footer}>\n                <a\n                    href=\"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Powered by{' '}\n                    <img src=\"/vercel.svg\" alt=\"Vercel Logo\" className={styles.logo}/>\n                </a>\n            </footer>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}