{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react'; // Import useState & useEffect hooks\n\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nconst defaultEndpoint = 'https://rickandmortyapi.com/api/character/'; // Default API endpoint\n\nexport async function getServerSideProps() {\n  // Function to fetch all the characters data\n  const res = await fetch(defaultEndpoint); // Setting the default API endpoint in the reponse\n\n  const data = await res.json(); // Grab the data in JSON format\n\n  return {\n    props: {\n      // Make data available in Props property.\n      data\n    }\n  };\n}\nexport default function Home({\n  data\n}) {\n  // Create an argument 'home' and capture the data\n  const {\n    info,\n    results: defaultResults = []\n  } = data; // Destructure the results and send empty array value and destructure the same from data\n\n  const {\n    0: results,\n    1: updateResults\n  } = useState(defaultResults); // Using React's useState we can store the results in state and the update the state with more results. Rename results to defaultResults to be used as the initial state.\n\n  const {\n    0: page,\n    1: updatePage\n  } = useState(_objectSpread(_objectSpread({}, info), {}, {\n    current: defaultEndpoint // Define the defaultEndpoint as the current state of the page.\n\n  }));\n  const {\n    current\n  } = page; // Use the current value to be updated every page by destructuring the 'current' vale from the page\n\n  useEffect(() => {\n    // Use useEffct to make request of pagination updates\n    if (current === defaultEndpoint) return; // check if the current value equals the default end point value\n\n    async function request() {\n      var _nextData$info;\n\n      // Call the async function to request a response to update the current state of the page\n      const res = await fetch(current);\n      const nextData = await res.json(); // assign nextData the value of the response in JSON format\n\n      updatePage(_objectSpread({\n        // Pass the current, next data information attributes in the updatePage function\n        current\n      }, nextData.info));\n\n      if (!((_nextData$info = nextData.info) !== null && _nextData$info !== void 0 && _nextData$info.prev)) {\n        // check if the information does not have previous value therefore replace the current results\n        updateResults(nextData.results);\n        return;\n      }\n\n      updateResults(prev => {\n        // Update the result and return the previous and new results\n        return [...prev, ...nextData.results];\n      });\n    }\n\n    request(); // Call a request function and pass 'current's' value through it\n  }, [current]);\n\n  function handleLoadMore() {\n    // Load more button function\n    updatePage(prev => {\n      // Update the 'page' state with new current value with the 'next' value as the as the endpoint to fetch new results\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        current: page === null || page === void 0 ? void 0 : page.next\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Rick & Morty Challenge\"\n      }), \" \", /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"../tkfavicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      className: styles.main,\n      children: [\" \", /*#__PURE__*/_jsx(\"h1\", {\n        className: styles.title,\n        children: \"Rick & Morty Challenge\"\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        className: styles.description,\n        children: [\" \", \"by Tanmay Kulkarni\"]\n      }), /*#__PURE__*/_jsxs(\"ul\", {\n        className: styles.grid,\n        children: [\" \", results.map(results => {\n          // By using map method create a new list of each character result\n          const {\n            id,\n            name,\n            image,\n            gender,\n            location,\n            origin,\n            species\n          } = results; // map the results by id, name, image, gender, location, origin & species\n\n          return (\n            /*#__PURE__*/\n            // Return a list by id as the key\n            _jsxs(\"li\", {\n              className: styles.card,\n              children: [/*#__PURE__*/_jsxs(\"a\", {\n                href: \"#\",\n                children: [/*#__PURE__*/_jsx(\"img\", {\n                  src: image,\n                  alt: '${name}} Thumbnail'\n                }), \" \", /*#__PURE__*/_jsx(\"h3\", {\n                  children: name\n                })]\n              }), /*#__PURE__*/_jsxs(\"ul\", {\n                className: styles.ulimage,\n                children: [\" \", /*#__PURE__*/_jsxs(\"li\", {\n                  children: [/*#__PURE__*/_jsx(\"strong\", {\n                    children: \"Gender: \"\n                  }), \" \", gender, \" \"]\n                }), /*#__PURE__*/_jsxs(\"li\", {\n                  children: [/*#__PURE__*/_jsx(\"strong\", {\n                    children: \"Location: \"\n                  }), \" \", location === null || location === void 0 ? void 0 : location.name, \" \"]\n                }), /*#__PURE__*/_jsxs(\"li\", {\n                  children: [/*#__PURE__*/_jsx(\"strong\", {\n                    children: \"Origin: \"\n                  }), \" \", origin === null || origin === void 0 ? void 0 : origin.name, \" \"]\n                }), /*#__PURE__*/_jsxs(\"li\", {\n                  children: [/*#__PURE__*/_jsx(\"strong\", {\n                    children: \"Species: \"\n                  }), \" \", species, \" \"]\n                })]\n              })]\n            }, id)\n          );\n        })]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          className: styles.bouncy,\n          onClick: handleLoadMore,\n          children: \"Load More\"\n        }), \" \"]\n      })]\n    }), /*#__PURE__*/_jsx(\"footer\", {\n      className: styles.footer,\n      children: /*#__PURE__*/_jsxs(\"a\", {\n        href: \"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [\"Powered by\", ' ', /*#__PURE__*/_jsx(\"img\", {\n          src: \"/vercel.svg\",\n          alt: \"Vercel Logo\",\n          className: styles.logo\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}